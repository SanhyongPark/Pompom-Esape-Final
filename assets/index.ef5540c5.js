import{p as e}from"./vendor.a50a6e37.js";!function(e=".",r="__import__"){try{self[r]=new Function("u","return import(u)")}catch(t){const s=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[r]=e=>new Promise(((t,n)=>{const o=new URL(e,s);if(self[r].moduleMap[o])return t(self[r].moduleMap[o]);const i=new Blob([`import * as m from '${o}';`,`${r}.moduleMap['${o}']=m;`],{type:"text/javascript"}),d=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(i),onerror(){n(new Error(`Failed to import: ${e}`)),a(d)},onload(){t(self[r].moduleMap[o]),a(d)}});document.head.appendChild(d)})),self[r].moduleMap={}}}("assets/");const r={title:"PomPom PK Farmer",type:e.AUTO,width:800,height:600,transparent:!0,disableContextMenu:!0,canvasStyle:"display: block; margin: 24px auto 0",physics:{default:"arcade",arcade:{debug:!1,debugShowBody:!0,debugShowStaticBody:!0,gravity:{x:0,y:0}}}};class t extends e.Scene{preload(){this.load.image("background","assets/background.png"),this.load.image("brownland","assets/brownland.png"),this.load.image("corn","assets/corn.png"),this.load.image("soil","assets/soil.png"),this.load.image("fence","assets/fence.png"),this.load.spritesheet("pompom","assets/pompom.png",{frameWidth:80,frameHeight:120}),this.load.spritesheet("farmer","assets/farmer.png",{frameWidth:84,frameHeight:98}),this.load.image("bar","assets/bar.png"),this.load.spritesheet("healthbar","assets/healthbar/healthbar.png",{frameWidth:160,frameHeight:80}),this.load.atlas("healthbar-json","assets/healthbar/healthbar.png","assets/healthbar/healthbar.json"),this.load.audio("background_music","assets/audio/background.ogg"),this.load.audio("pick","assets/audio/pick.mp3"),this.load.audio("caught","assets/audio/caught.mp3"),this.load.audio("alarm","assets/audio/alarm.wav")}create(){this.scene.start("LevelOne")}}const s=[];class a extends e.Scene{constructor(){super(...arguments),this.nextSceneName="LevelOne",this.spaceKeyPressed=!1,this.currentCarryingCorn=null,this.currentCarryingIndex=-1,this.hasEnteredBrownland=!1,this.existingCornLists=[]}create(){const{scene:e,nextSceneName:r}=this;console.log(e.key,r,s),this.registerEvents(),this.drawBackgroundAndBrownland(),this.drawSoilAndCron(),this.drawFarmer(),this.drawPom(),this.drawHealthBar(),this.checkCollision(),this.pick=this.sound.add("pick",{loop:!1}),this.caught=this.sound.add("caught",{loop:!1}),this.alarm=this.sound.add("alarm",{loop:!0}),window.scene=this}update(){const{pom:e,farmer:r,cursor:t,scene:s,physics:a,spaceKeyPressed:n,currentCarryingIndex:o,hasEnteredBrownland:i}=this;if(t.space.isDown){if(n)return;return this.spaceKeyPressed=!0,void(s.isPaused()?s.resume():s.pause())}t.up.isDown?(e.setVelocity(0,-160),e.anims.play("pompom-front",!0),this.drawCarryingCorn()):t.down.isDown?(e.setVelocity(0,160),e.anims.play("pompom-back",!0),this.drawCarryingCorn()):t.left.isDown?(e.setVelocity(-160,0),e.anims.play("pompom-left",!0),this.drawCarryingCorn()):t.right.isDown?(e.setVelocity(160,0),e.anims.play("pompom-right",!0),this.drawCarryingCorn()):(e.setVelocity(0,0),e.anims.pause()),(~o||i)&&a.moveToObject(r,e,80)}registerEvents(){const{input:{keyboard:e}}=this,r=e.createCursorKeys();this.cursor=r}drawBackgroundAndBrownland(){this.drawBackground(),this.drawBrownlandAndFence()}drawBackground(){const{physics:e}=this,{world:{bounds:{centerX:r,centerY:t}}}=e;this.add.image(r,t,"background")}drawBrownlandAndFence(){const{physics:e}=this,{world:{bounds:{width:r,centerX:t,centerY:s}}}=e,a=e.add.image(t,s+0,"brownland"),n=e.add.staticGroup();n.create(r-25,s+0,"fence").setOrigin(0,.5).refreshBody(),this.brownland=a,this.fenceGroup=n}drawSoilAndCron(){const{physics:e}=this,{world:{bounds:{centerY:r}}}=e,t=[];Array.from({length:3}).forEach(((a,n)=>{const o=179+157*n;if(this.add.image(o,r+0,"soil").setOrigin(0,.5),~s.indexOf(n))return;const i=e.add.image(o+45,r+0,"corn").setOrigin(0,.5);i.index=n,t.push(i)})),this.existingCornLists=t}drawFarmer(){const{anims:e,physics:r}=this,t=r.add.sprite(72,96,"farmer",0);this.farmer=t,t.setCollideWorldBounds(!0),e.create({key:"farmer-front",frames:e.generateFrameNumbers("farmer",{start:0,end:3}),frameRate:10,repeat:-1}),e.create({key:"farmer-back",frames:e.generateFrameNumbers("farmer",{start:4,end:7}),frameRate:10,repeat:-1}),e.create({key:"farmer-left",frames:e.generateFrameNumbers("farmer",{start:8,end:11}),frameRate:10,repeat:-1}),e.create({key:"farmer-right",frames:e.generateFrameNumbers("farmer",{start:12,end:15}),frameRate:10,repeat:-1})}drawPom(){const{anims:e,physics:r}=this,{world:{bounds:{centerY:t}}}=r,s=r.add.sprite(720,t+180,"pompom",2);this.pom=s,s.setCollideWorldBounds(!0),e.create({key:"pompom-front",frames:e.generateFrameNumbers("pompom",{start:2,end:3}),frameRate:10,repeat:-1}),e.create({key:"pompom-back",frames:e.generateFrameNumbers("pompom",{start:7,end:8}),frameRate:10,repeat:-1}),e.create({key:"pompom-left",frames:e.generateFrameNumbers("pompom",{start:0,end:1}),frameRate:10,repeat:-1}),e.create({key:"pompom-right",frames:e.generateFrameNumbers("pompom",{start:4,end:5}),frameRate:10,repeat:-1})}drawHealthBar(e=s.length){const{physics:r}=this,{world:{bounds:{width:t}}}=r;this.add.sprite(t-136,0,"healthbar",3-e).setOrigin(0,0).setScale(.75)}drawEatenCorn(){const{physics:e}=this,{world:{bounds:{width:r}}}=e;s.forEach(((e,t)=>{this.add.image(r-18,248+36*t,"corn").setOrigin(0,0).setScale(.36)}))}drawCarryingCorn(e=!0){const{pom:r,currentCarryingCorn:t}=this,{x:s,y:a}=r,n=a+18;if(t)return t.x=s,void(t.y=n);if(e)return;const o=this.add.image(s,n,"corn");o.setScale(.5).setAngle(90),this.currentCarryingCorn=o}checkCollision(){const{scene:e,physics:r,farmer:t,fenceGroup:a,brownland:n,pom:o,existingCornLists:i}=this;r.add.overlap(o,n,(()=>{this.alarm.play(),this.hasEnteredBrownland=!0})),r.add.overlap(o,i,((e,r)=>{const{currentCarryingIndex:t,currentCarryingCorn:s}=this;this.pick.play(),~t||s||(r.destroy(),this.drawCarryingCorn(!1),this.currentCarryingIndex=r.index)})),r.add.collider(o,a,(()=>{const{currentCarryingIndex:r,currentCarryingCorn:t,nextSceneName:a}=this;~r&&t&&(t.destroy(),this.currentCarryingCorn=null,s.push(r),a?e.stop().start(a):(this.drawHealthBar(),setTimeout((()=>{alert("游戏结束"),e.stop().switch("LevelOne")}),0)))})),r.add.overlap(o,t,(()=>{this.caught.play(),alert("小鸡被抓了"),e.restart()}))}resetDataStatus(){this.spaceKeyPressed=!1,this.currentCarryingCorn=null,this.currentCarryingIndex=-1,this.hasEnteredBrownland=!1,this.game.sound.stopAll()}}class n extends a{constructor(){super("LevelOne"),this.nextSceneName="LevelTwo"}init(){s.length=0,this.resetDataStatus(),console.log("LevelOne inited")}create(){this.background_music=this.sound.add("background_music",{loop:!0}),this.background_music.play(),super.create(),console.log("LevelOne created")}}class o extends a{constructor(){super("LevelTwo"),this.nextSceneName="LevelThree"}init(){this.resetDataStatus(),console.log("LevelTwo inited")}create(){super.create(),console.log("LevelTwo created")}}class i extends a{constructor(){super("LevelThree"),this.nextSceneName=""}init(){this.resetDataStatus(),console.log("LevelThree inited")}create(){super.create(),console.log("LevelThree created")}}class d extends e.Game{constructor(e){super(e),this.initialize()}initialize(){this.scene.add("PreloadResource",t,!0),this.scene.add("LevelOne",n),this.scene.add("LevelTwo",o),this.scene.add("LevelThree",i)}}const c=new d(r);window.mainGame=c;
